/*
 *     1. 연산자  => 값을 기억 (메모리(RAM)) => 한개의 값을 기억 => 변수
 *     =========================================================
 *     2. 변수 활용 : 연산자 , 제어문 
 *     데이터 저장   ======  데이터 활용(가공)  ========= 결과값 출력 (성공:메인,실패:로그인,회원가입)
 *                        ==============
 *                          사용자 요청 
 *     예) 사용자 로그인 요청 => ID,Password  ======> id,pwd(검색)
 *                                                연산자 (==)
 *                          ============= 메모리 저장 (변수) 
 *     연산자 
 *       = 단항연산자 (피연산자 1개)
 *         = 증감연산자  :  ++ , --
 *         = 부정연산자  :  ! (not)
 *         = 형변환 연산자 : (데이터형)  => 예) 정수 ==> 실수 , 정수 ==> 문자 , 문자 ==> 정수...
 *                                         (double)10  , (char)65        (int)'A'
 *           형변환이 되는 데이터 크기 
 *           데이터형 
 *             기본 데이터형 : 자바에서 지원 
 *             ========================
 *               정수 : byte(파일 입출력) , int(평상시 숫자:default) ,long  
 *               실수 : double 
 *               문자 : char  =====> char 문자 한개 저장 : '' , 여러개 문자를 저장 ""
 *                                                     '' => 오류 => 초기화 'A' , int 0
 *                                                        int a=10000;
 *                                                        
 *               byte < short,char < int < long < float < double
 *               ====         ====   ====  ====           =======
 *               ** char는 연산처리가 되면 => 정수변환 
 *               'A'+1 => 65+1
 *               c>='A' && c<='Z'
 *                  ===       ===
 *                    65       90
 *               
 *               논리 (형변황에서 제외) => true/false 
 *               *** 범위를 벗어나면 => 오버플라워를 발생 
 *               byte b = (byte)300;  ===> b=44
 *               
 *               연산자 (실제) => 결과은 ?  제어문 (연산자 응용)
 *               
 *             참조 데이터형 : 배열 , 클래스 ,인터페이스 , 열거형  (사용자 정의)
 *             
 *          이항연산자(피연산자 2개) : 연산되는 숫자  10 + 10
 *                                            ==   ==
 *                                            피연산자
 *                                            ================
 *             = 산술연산자
 *               + , - , * , / , %
 *               1) 주의점 : 항상 연산이 되면 => 가장 큰 데이터형으로 변경 
 *                         int + double = double
 *                         * 연산은 같은 데이터형끼리만 연산이 가능 
 *                           int + double 
 *                          =====
 *                          => double 변경하고 연산 => 자동 형변환 (작은 데이터형 = 큰데이터형)
 *                          double d=10 ==> 10.0
 *                          
 *                         char + int = int
 *                         ====
 *                         int
 *                         
 *                         예) 'A'+1  => A1(X)
 *                            ===
 *                            65  
 *                            65+1=> 66  ==>  (char)66
 *                            
 *                       int a=10+10
 *                       int a=20
 *                       
 *                       char c='A'
 *                       char c=65   char <==> int 
 *                       
 *                       int a=100
 *                       int b=100+1000
 *                             'A'+32 ==> 'a'
 *                       
 *                       // int 이하의 데이터형은 연산처리가 되면 => 결과값이 int
 *                       // / 
 *                          = 0으로 나눌 수 없다 (오류발생)
 *                          = 정수/정수=정수  5/2 ==> 2 (오라클 => 2.5, 파이썬 =>2.5, EL=> 2.5)
 *                                                                  /  //
 *                       // % 
 *                          = 부호 => 왼쪽편 부호가 남는다 
 *                            5%2 ==> 1
 *                            -5%2 ==> -1
 *                            -5%-2 ==> -1
 *                            5%-2 ==> 1
 *                   =================================  % : 윤년 구할때 
 *                      year%4==0 && year%100!=0 || year%400==0
 *                      ========================    ============
 *                      4년마다 
 *                      100년마다 제외
 *                      400년마다 
 *                      ======================== 예매 
 *                      
 *              2. 비교연산자 : 결과값 : boolean (true/false) => 수를 비교 
 *                   같다  : == (수만 비교 , 문자열은 비교 할 수 없다)
 *                                        ====================  equals()
 *                   같지 않다 :  !=
 *                   작다 :  <  ===> 기준은 왼쪽  ==> 
 *                          int a=10;
 *                          a<10  
 *                   크다 :  > 
 *                   작거나 같다 : <=
 *                   크거나 같다 : >=
 *              3. 논리연산자  
 *                 && => 두개가 true만 true가 된다
 *                 || => 둘중에 1개 true면 true가 된다
 *                 
 *                 (6>7) && (7==7)
 *                 =====    ======
 *                   |        |
 *                   |        |
 *                 false     true
 *                   ==========
 *                       |
 *                     false
 *                     
 *                 = &&는 앞에 있는 조건이 false면 뒤에 있는 조건은 수행하지 않는다 
 *                 = ||는 앞에 있는 조건이 true면 뒤에 있는 조건은 수행하지 않는다 
 *                 =================================== 효율적인 연산 
 *            4.대입 연산자 (오른쪽 => 왼쪽) 
 *              int a=10;    a에 10을 대입한다 (X)
 *                           10을 a에 대입(O)     ==> 마지막에 연산
 *              = : 대입
 *              += : +한 다음에 대입
 *              int a=10;
 *              a+=10;   ====> a=a+10 ==> a=20
 *              int b=10;
 *              b+=1;  => b=b+1
 *              
 *              => 1개씩 증가 
 *                 a++
 *                 ++a
 *                 a+=1
 *                 a=a+1
 *              -= : -한 다음에 대입  => 누적 , 문자열 결합 
 *              int a=10;
 *              a-=5        a=a-5 
 *                            ==
 *                            10   10-5    a=5
 *              => 1씩 감소 
 *                 a--
 *                 --a
 *                 a-=1
 *                 a=a-1
 *                 a=1  ==> a+=2
 *                 a=0  ==> a+=2
 *                 
 *                 
 *                 + : 산술처리 , 문자열 결합 
 *                 
 *                 10+10=20
 *                 "10"+"10" ==> 1010 ==> ""가 있는 경우 
 *                 
 *                 "7"+7+7
 *                 =====
 *                  "77"+7
 *                  ======
 *                   "777"
 *                 7+7+"7"
 *                 ===
 *                 14 +"7"
 *                 =======
 *                    "147"
 *                    
 *          10+""+10  ==>  "1010"
 *          
 *          7+"7"  ==> "77" 
 *          int a=10;
 *          System.out.println("a="+a) => a=10
 *          
 *          +연산자에 ""이 있으면 결과값은 문자열이 출력된다 
 */
public class 자바연산자정리 {
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
        //char a=97;// 초기화
        //char b='B'+32;
       // int c=a+a; // int , long, float , double
        // int 이하의 데이터형은 연산처리가 되면 => 결과값이 int
        //System.out.println(a);
		/*int a=10;
		int b=9;
		boolean bCheck= a<b || ++b==a;
		//             
		System.out.println("b="+b);
		System.out.println(bCheck);
		*/
		//int a=10;
		/*
		 * a++; a++; a++; a++; a++;
		 */
		//a+=5;
		//System.out.println(a);
		// ====  a+=5
		System.out.println(7+7);//14
		System.out.println(7+"7");//77
		System.out.println(7+7+"7");//147
		System.out.println(7+"7"+7);//777
		//                 ==== "77"+7 ==> "777" 
		System.out.println('7'+7);
		System.out.println((int)'7');
		/*
		 *   출력 => 메소드 
		 *   print() => \n (new Line) 가 존재하지 않는다 
		 *   println() => \n을 포함 
		 *   prinf () => 서식이 있는 출력형식 
		 *   5+5=10
		 *   int a=5;
		 *   int b=5;
		 *   int c=a+b;
		 *   println(a+"+"+b+"="+c)  == 5+5=10
		 *   
		 *   printf("%d+%d=%d",a,b,c)
		 *   %d => 정수
		 *   %f => 실수
		 *   %c => 문자
		 *   %s => 문자열 
		 */
		int a=10;
		int b=20;
		// 10+20=30
		// 산술 연산자 => 우선순위 (* , / , %) => (+,-) ==> 순위를 정할 경우 ()
		// 5+10*2  => 25
		//   ==== 1
		// ====== 2
		// (5+10)*2 => 30
		System.out.println(a+"+"+b+"="+a*b); // ()는 최우선 순위 연산자
		/*                ======
		 *                 "10+"+b
		 *                 ========
		 *                  "10+20"+"="
		 *                  ===========
		 *                   "10+20="+a
		 *                   ===========
		 *                   "10+20=10"+b
		 *                   =============
		 *                   "10+20=1020"
		 *   
		 */
		System.out.println((5+10)*2);
		// JDK 1.5이상 
		// 정수+정수=정수
		System.out.printf("%d + %d = %d\n",a,b,a+b);// newLine 
		System.out.println(10/3.0);
		System.out.printf("%.2f\n",10/3.0);// .2f (소수점 2자리) , .1f 
		System.out.printf("%c\n",'A');
		System.out.printf("%s\n","국어");
		//System.out.printf("%b\n",true);//boolean
		//System.out.printf("%d\n",012);// 8진법 
		
	}

}








